// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// poly_idx_cpp
NumericMatrix poly_idx_cpp(int p, int M);
RcppExport SEXP _rpcm_tree_poly_idx_cpp(SEXP pSEXP, SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(poly_idx_cpp(p, M));
    return rcpp_result_gen;
END_RCPP
}
// rpcm_esf_c
List rpcm_esf_c(int rawScore, NumericVector itemDifficulties, NumericVector itemTimeLimits, int order);
RcppExport SEXP _rpcm_tree_rpcm_esf_c(SEXP rawScoreSEXP, SEXP itemDifficultiesSEXP, SEXP itemTimeLimitsSEXP, SEXP orderSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type rawScore(rawScoreSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type itemDifficulties(itemDifficultiesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type itemTimeLimits(itemTimeLimitsSEXP);
    Rcpp::traits::input_parameter< int >::type order(orderSEXP);
    rcpp_result_gen = Rcpp::wrap(rpcm_esf_c(rawScore, itemDifficulties, itemTimeLimits, order));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rpcm_tree_poly_idx_cpp", (DL_FUNC) &_rpcm_tree_poly_idx_cpp, 2},
    {"_rpcm_tree_rpcm_esf_c", (DL_FUNC) &_rpcm_tree_rpcm_esf_c, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_rpcm_tree(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
